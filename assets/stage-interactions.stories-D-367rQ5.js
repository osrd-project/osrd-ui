import{c as d}from"./index-DX8y_bUt.js";import{r as S,R as l}from"./index-CDs2tPxN.js";import{X as _,Y as v,S as E,O as m,d as M,e as P,f as b,h,P as T,a as X}from"./utils-D1jM7My1.js";import{g as A}from"./vectors-BMNFZSin.js";/* empty css                        */import"./lodash-B2soob2o.js";import"./chroma-vMwKRLDS.js";const V=({xPan:f,yPan:c,xZoom:p,yZoom:u,spaceScaleType:L})=>{const[t,O]=S.useState({xOffset:0,yOffset:0,xZoomLevel:_,yZoomLevel:v,panning:null});return l.createElement("div",{className:"inset-0"},l.createElement(E,{className:d("inset-0 absolute p-0 m-0",t.panning&&"cursor-grabbing"),operationalPoints:m,spaceOrigin:0,spaceScales:m.slice(0,-1).map((n,a)=>({from:n.position,to:m[a+1].position,...L==="linear"?{size:50*t.yZoomLevel}:{coefficient:150/t.yZoomLevel}})),timeOrigin:+new Date("2024/04/02"),timeScale:6e4/t.xZoomLevel,xOffset:t.xOffset,yOffset:t.yOffset,onPan:({initialPosition:n,position:a,isPanning:r})=>{if(!f&&!c)return;const o=A(n,a);O(e=>{if(r)if(e.panning){const{initialOffset:y}=e.panning,i={...e};return f&&(i.xOffset=y.x+o.x),c&&(i.yOffset=y.y+o.y),i}else return{...e,panning:{initialOffset:{x:e.xOffset,y:e.yOffset}}};else return{...e,panning:null}})},onZoom:({delta:n,position:{x:a,y:r}})=>{!p&&!u||O(o=>{const e={...o};return p&&(e.xZoomLevel=Math.min(Math.max(e.xZoomLevel*(1+n/10),M),P),e.xOffset=a-(a-o.xOffset)/o.xZoomLevel*e.xZoomLevel),u&&(e.yZoomLevel=Math.min(Math.max(e.yZoomLevel*(1+n/10),b),h),e.yOffset=r-(r-o.yOffset)/o.yZoomLevel*e.yZoomLevel),e})}},T.map((n,a)=>l.createElement(X,{key:n.id,index:a,path:n,color:n.color}))))},C={title:"SpaceTimeChart/Panning and zooming",component:V,argTypes:{xPan:{name:"Enable panning on the X axis?",defaultValue:!0,control:{type:"boolean"}},yPan:{name:"Enable panning on the Y axis?",defaultValue:!0,control:{type:"boolean"}},xZoom:{name:"Enable zooming on the X axis?",defaultValue:!0,control:{type:"boolean"}},yZoom:{name:"Enable zooming on the Y axis?",defaultValue:!0,control:{type:"boolean"}},spaceScaleType:{name:"Space scaling type",options:["linear","proportional"],defaultValue:"linear",control:{type:"radio"}}}},s={name:"Default arguments",args:{xPan:!0,yPan:!0,xZoom:!0,yZoom:!0,spaceScaleType:"linear"}};var x,g,Z;s.parameters={...s.parameters,docs:{...(x=s.parameters)==null?void 0:x.docs,source:{originalSource:`{
  name: 'Default arguments',
  args: {
    xPan: true,
    yPan: true,
    xZoom: true,
    yZoom: true,
    spaceScaleType: 'linear'
  }
}`,...(Z=(g=s.parameters)==null?void 0:g.docs)==null?void 0:Z.source}}};const k=["DefaultArgs"];export{s as DefaultArgs,k as __namedExportsOrder,C as default};
